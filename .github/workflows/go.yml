name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  GO111MODULE: on

jobs:
  lint_markdown_files:
    uses: optimizely/go-sdk/.github/workflows/lint_markdown.yml@master

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v3
      with:
        go-version: '1.13.15'
    - run: make install lint

  unit_test_latest:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v3
      with:
        go-version: '>=1.19'
    - run: make cover

  unit_test_legacy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v3
      with:
        go-version: '1.13'
        check-latest: true
    - run: make cover
          
  unit_test_coverage:
    runs-on: ubuntu-latest
    env: 
      COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v3
      with:
        go-version: '1.17'
        check-latest: true
    - run: |
        make cover
        go get github.com/mattn/goveralls
        goveralls -coverprofile=profile.cov -service=github

  benchmark_test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v3
      with:
        go-version: '>=1.19'
    - run: make benchmark

  integration_tests:
    uses: optimizely/go-sdk/.github/workflows/integration_test.yml@master
    secrets:
      CI_USER_TOKEN: ${{ secrets.CI_USER_TOKEN }}
      TRAVIS_COM_TOKEN: ${{ secrets.TRAVIS_COM_TOKEN }}

  fullstack_production_suite:
    uses: optimizely/go-sdk/.github/workflows/integration_test.yml@master
    with:
      FULLSTACK_TEST_REPO: ProdTesting
    secrets:
      CI_USER_TOKEN: ${{ secrets.CI_USER_TOKEN }}
      TRAVIS_COM_TOKEN: ${{ secrets.TRAVIS_COM_TOKEN }}
